<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">


	<bean id="pages" class="org.infinite.web.utils.PagesCst" >		
		<property name="absoluteDataPath" value="/home2/mikesac/public_html/infinite/data" />
		<property name="relativeDataPath" value="/infinite/data" />
	</bean>
	
	<bean id="accountEngine" class="org.infinite.web.engines.account.AccountEngine" />


	<!-- all controllers are identified by @Controller annotation into given package. -->
	<context:component-scan base-package="org.infinite.web" />

	<!--
		- Les controlleurs de cette application fournissent une annotation
		@RequestMapping - Qui peuvent être déclaré de deux manière différentes
		: - Au niveau de la classe par exemple : -
		@RequestMapping("/addVisit.html") - Pour ce type de controlleurs on
		peut annoter les méthodes pour qu'elles - prennent en charge une
		requête Post ou une requête Get - @RequestMapping(method =
		RequestMethod.GET) - Ou alors au niveau de chaque méthode, différents
		exemples seront fournis.
	-->

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />


	<!-- ###### JSP ViewResolver ###### -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/jsp/" p:suffix=".jsp">
		<!-- Low priority -->
		<property name="order" value="2" />
	</bean>


	<!-- ###### FREEMARKER ViewResolver ###### -->
	<bean id="freemarkerConfig"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
	</bean>

	<!--
		View resolvers can also be configured with ResourceBundles or XML
		files. If you need different view resolving based on Locale, you have
		to use the resource bundle resolver.
	-->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />

		<!-- High priority -->
		<property name="order" value="1" />

		<property name="requestContextAttribute" value="rc"/>
		<property name="exposeRequestAttributes" value="true"/>
		<property name="exposeSessionAttributes" value="true"/>
		<property name="exposeSpringMacroHelpers" value="true" />
	</bean>

</beans>
